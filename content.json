[{"title":"HTML5元素类型","date":"2017-02-28T11:20:14.000Z","path":"2017/02/28/HTML5元素类型/","text":"根据HTML5新规范，不再根据inline和block来区分元素类型。在HTML5新规范中，每个元素会规定如下两项： Content categories(元素的类型) Permitted content/content models(合法的元素内容) 下图是元素类型的分类： Main content categories（大多数元素共享的内容规范） Metadata content Flow content通常包含文本或嵌入内容 Sectioning content会在当前大纲创建sectionarticle，aside，nav，section Heading content定义section的标题&lt;h1&gt;到&lt;h6&gt;Note：虽然&lt;header&gt; 包含heading content，但其本身不是这一类 Phrasing content定义文本和它包含的标记，Phrasing content组成段落 Embedded content导入另一个资源或将来自另一种标记语言或命名空间的内容插入到文档中。&lt;audio&gt;，&lt;canvas&gt;，&lt;iframe&gt;，&lt;img&gt;，&lt;svg&gt;，&lt;vedio&gt;等 Interactive content为用户交互设计的元素&lt;a&gt;,&lt;button&gt;,&lt;select&gt;,&lt;textarea&gt;等 Palpable content元素不是空或隐藏 Form-associated content表单相关元素&lt;button&gt;,&lt;fieldset&gt;,&lt;input&gt;,&lt;label&gt;等 以上只是简单举了几个列子，更详细的可以在MDN，搜索具体HTML元素，就会看到元素的类型以及允许内容了 Transparent content model这类元素本身内部可以有任何类型的内容，是否合法要看其父元素的 content model 和其内容的 categories。比如&lt;a&gt;。 E.X. 判断&lt;p&gt;&gt;&lt;ins&gt;&gt;&lt;a&gt;&gt;&lt;div&gt;是否合法&lt;p&gt;’s content model is Phrasing content, and &lt;ins&gt;’s categories are Phrasing content or Flow content, so &lt;p&gt;&gt;&lt;ins&gt; is allowed. &lt;ins&gt;’s content model is transparent, so it’s depend on &lt;p&gt;&gt;&lt;a&gt;. And &lt;a&gt;’s categories contains Phrasing content, so &lt;p&gt;&gt;&lt;ins&gt;&gt;&lt;a&gt; is allowed. &lt;a&gt;’s content model is transparent, and &lt;div&gt;’s categories don’t involve Phrasing content, so &lt;p&gt;&gt;&lt;ins&gt;&gt;&lt;a&gt;&gt;&lt;div&gt; is illegal. 参考资料：【1】 a 标签为什么能够包含块级元素？ - 顾轶灵的回答 - 知乎【2】 Content categories - Web developer guides | MDN","tags":[{"name":"HTML/HTML5","slug":"HTML-HTML5","permalink":"http://yoursite.com/tags/HTML-HTML5/"}]},{"title":"【译】HTML5大纲算法","date":"2017-02-27T13:29:10.000Z","path":"2017/02/27/【译】HTML5大纲算法/","text":"因为时间问题，并不是完全的翻译，只把自己认为重要的地方按自己的理解大致翻译了一下，如有错误，希望能有人指出，谢谢。 原文：Using HTML sections and outlines Note：以下大纲算法在用户代理中还没有实现 HTML5的规范化使得Web开发者以标准语义来描述网页文档的结构。 HTML4的文档结构（Structure of a document in HTML4）文档结构（或语义化结构）即与之间的部分。HTML4使用章节（section）和子章节来描述文档结构，一个章节是由一个包含标题（heading）元素（&lt;h1&gt;到&lt;h6&gt;）的 &lt;div&gt; 元素来定义。 比如有以下标记：12345678910&lt;div class=&quot;section&quot; id=&quot;forest-elephants&quot; &gt; &lt;h1&gt;Forest elephants&lt;/h1&gt; &lt;p&gt;In this section, we discuss the lesser known forest elephants. ...this section continues... &lt;div class=&quot;subsection&quot; id=&quot;forest-habitat&quot; &gt; &lt;h2&gt;Habitat&lt;/h2&gt; &lt;p&gt;Forest elephants do not live in trees but among them. ...this subsection continues... &lt;/div&gt;&lt;/div&gt; 遵循的大纲形式为：121. Forest elephants 1.1 Habitat 实际上，&lt;div&gt; 元素不是必须的，标题元素的出现就可以代表一个新的章节。比如如下标记：12345678&lt;h1&gt;Forest elephants&lt;/h1&gt; &lt;p&gt;In this section, we discuss the lesser known forest elephants. ...this section continues... &lt;h2&gt;Habitat&lt;/h2&gt; &lt;p&gt;Forest elephants do not live in trees but among them. ...this subsection continues... &lt;h2&gt;Diet&lt;/h2&gt;&lt;h1&gt;Mongolian gerbils&lt;/h1&gt; 文档大纲为：12341. Forest elephants 1.1 Habitat 1.2 Diet2. Mongolian gerbils 可以看出，HTML4中大纲结构是按照网页中heading的级别定义的。 HTML5所解决的问题（Problems solved by HTML5）HTML4所定义的文档结构和其大纲算法非常简略，因此导致了很多问题： 使用&lt;div&gt;来定义语义化章节而不对其class属性做设定，使得自动大纲算法几乎不可能实现，因为算法无法识别&lt;div&gt;到底是用来定义大纲的章节还是只是作为表现型&lt;div&gt;为样式服务。另外，HTML4规范对于章节及其范围的定义并不精确。大纲的自动生成非常重要，尤其对于辅助技术（assitive technology）。HTML5从大纲算法中移除了&lt;div&gt;元素，并引入了新元素&lt;section&gt; ，称作HTML章节元素（the HTML Section Element）。 归并几个文档比较困难，为了保持大纲的正确性，包含子文档的主文档意味着HTML标题级别的变化。HTML5引入了新的分区元素（sectioning elements）&lt;article&gt;，&lt;section&gt;，&lt;nav&gt;，&lt;aside&gt;，这些元素总是其最近祖先章节的子章节，而不用理会祖先章节的标题级别。 在HTML4中，每个章节都是大纲的一部分。但是文档并不是总是呈现线性结构。一个文档可能具有某些特殊章节，其虽然于主体有关联，但却不是主体的一部分。比如一个广告块或者一个解释框。HTML5 引入了&lt;aside&gt;元素，允许主体大纲不包含&lt;aside&gt;所定义的章节。 同样，与站点有关却与文档无关的信息不应该成为大纲的一部分，比如logo，菜单，网站导航，版权信息以及合法标识。为解决这个问题，HTML5 引入了三个新元素:&lt;nav&gt;代表链接集合，&lt;header&gt;和&lt;footer&gt;代表站点有关信息。值得注意的是&lt;header&gt;和&lt;footer&gt;的并不像&lt;section&gt;一样做内容分区，它们只是用来对章节做一个语义化标识。 HTML5大纲算法（The HTML5 outline algorithm）定义章节（Defining sections）在HTML5中章节可以被嵌套。除了&lt;body&gt;定义的主章节，章节还可以被显示或隐式的定义。显示定义的章节有位于&lt;body&gt;，&lt;section&gt;，&lt;article&gt;，&lt;aside&gt;，&lt;nav&gt;标签里的内容。值得注意的是每个章节有其自己的标题分层结构，所以嵌套的章节也可以包含&lt;h1&gt;标签。 在如下例子中，文档由一个较高级别章节和一个footer定义，在较高级别章节中我们有三个子章节，由两个&lt;section&gt;和一个&lt;aside&gt; 元素定义：1234567891011121314151617181920212223&lt;section&gt; &lt;h1&gt;Forest elephants&lt;/h1&gt; &lt;section&gt; &lt;h1&gt;Introduction&lt;/h1&gt; &lt;p&gt;In this section, we discuss the lesser known forest elephants.&lt;/p&gt; &lt;/section&gt; &lt;section&gt; &lt;h1&gt;Habitat&lt;/h1&gt; &lt;p&gt;Forest elephants do not live in trees but among them.&lt;/p&gt; &lt;/section&gt; &lt;aside&gt; &lt;p&gt;advertising block&lt;/p&gt; &lt;/aside&gt;&lt;/section&gt;&lt;footer&gt; &lt;p&gt;(c) 2010 The Example company&lt;/p&gt;&lt;/footer&gt; 因此文档大纲如下：1231. Forest elephants 1.1 Introduction 1.2 Habitat 定义标题（Defining headings）除了由HTML分区元素来定义文档结构的同时，大纲还需要标题才能起到作用。基本规则很简单：第一个出现的标题元素定义了离它最近章节的标题。标题元素由标签中的数字来代表级别，比如&lt;h1&gt; 具有最高级别，&lt;h6&gt; 具有最低级别。考虑如下代码：123456789101112131415&lt;section&gt; &lt;h1&gt;Forest elephants&lt;/h1&gt; &lt;p&gt;In this section, we discuss the lesser known forest elephants. ...this section continues... &lt;section&gt; &lt;h2&gt;Habitat&lt;/h2&gt; &lt;p&gt;Forest elephants do not live in trees but among them. ...this subsection continues... &lt;/section&gt;&lt;/section&gt;&lt;section&gt; &lt;h3&gt;Mongolian gerbils&lt;/h3&gt; &lt;p&gt;In this section, we discuss the famous mongolian gerbils. ...this section continues...&lt;/section&gt; 创建了如下大纲：1231. Forest elephants 1.1 Habitat2. Mongolian gerbils 我们注意到标题元素的级别并不重要（&lt;h3&gt; 元素也可以作为第二个最高级别章节的标题）。 隐式分区（Implicit sectioning）HTML5分区元素对定义大纲来说并不是强制的，为了与现存的遵循HTML4规范的网页进行兼容，HTML5规范提出了一种叫做“隐式分区”的方法，即在没有分区元素的情况下实现章节的定义。当标题元素（&lt;h1&gt;到&lt;h6&gt;）不是其父级显式章节的第一个标题时，即定义了一个新的隐式章节。以这种方式定义的章节在大纲中的位置，是由与其父章节里的前一个标题的相对级别来决定。 如果比前一个标题的级别低，则开启了一个隐式子章节。考虑如下代码：12345678&lt;section&gt; &lt;h1&gt;Forest elephants&lt;/h1&gt; &lt;p&gt;In this section, we discuss the lesser known forest elephants. ...this section continues... &lt;h3 class=&quot;implicit subsection&quot;&gt;Habitat&lt;/h3&gt; &lt;p&gt;Forest elephants do not live in trees but among them. ...this subsection continues...&lt;/section&gt; 大纲形式定义为：121. Forest elephants 1.1 Habitat (implicitly defined by the h3 element) 如果和前一个标题的级别相同，就闭合前一个章节并开启一个新的同级别隐式章节：12345678&lt;section&gt; &lt;h1&gt;Forest elephants&lt;/h1&gt; &lt;p&gt;In this section, we discuss the lesser known forest elephants. ...this section continues... &lt;h1 class=&quot;implicit section&quot;&gt;Mongolian gerbils&lt;/h1&gt; &lt;p&gt;Mongolian gerbils are cute little mammals. ...this section continues...&lt;/section&gt; 大纲形式为：121. Forest elephants2. Mongolian gerbils (implicitly defined by the h1 element, which closed the previous section at the same time) 如果比前一个章节的级别高，则闭合前一个章节并开启一个新的更高级别的隐式章节：1234567891011121314151617&lt;body&gt; &lt;h1&gt;Mammals&lt;/h1&gt; &lt;h2&gt;Whales&lt;/h2&gt; &lt;p&gt;In this section, we discuss the swimming whales. ...this section continues... &lt;section&gt; &lt;h3&gt;Forest elephants&lt;/h3&gt; &lt;p&gt;In this section, we discuss the lesser known forest elephants. ...this section continues... &lt;h3&gt;Mongolian gerbils&lt;/h3&gt; &lt;p&gt;Hordes of gerbils have spread their range far beyond Mongolia. ...this subsection continues... &lt;h2&gt;Reptiles&lt;/h2&gt; &lt;p&gt;Reptiles are animals with cold blood. ...this section continues... &lt;/section&gt;&lt;/body&gt; 大纲形式为：123451. Mammals 1.1 Whales (implicitly defined by the h2 element) 1.2 Forest elephants (explicitly defined by the section element) 1.3 Mongolian gerbils (implicitly defined by the h3 element, which closes the previous section at the same time)2. Reptiles (implicitly defined by the h2 element, which closes the previous section at the same time) 虽然HTML5规范并没有做强制要求，但是为了标记能够更加易于理解，最佳实践就是使用显式定义来开启和闭合章节，并且使标题级别与嵌套级别相匹配。 分区根（Sectioning roots）分区根是一种可以开启一个新大纲的HTML元素，但是分区根中的章节和标题不对分区根的上层大纲做贡献。除了&lt;body&gt; 是文档的逻辑分区根，一些在网页中引入外部内容的元素也可以作为分区根：&lt;blockquote&gt;，&lt;details&gt;，&lt;fieldset&gt;，&lt;figure&gt;，&lt;td&gt;。 考虑如下代码：12345678910111213141516&lt;section&gt; &lt;h1&gt;Forest elephants&lt;/h1&gt; &lt;section&gt; &lt;h2&gt;Introduction&lt;/h2&gt; &lt;p&gt;In this section, we discuss the lesser known forest elephants&lt;/p&gt; &lt;/section&gt; &lt;section&gt; &lt;h2&gt;Habitat&lt;/h2&gt; &lt;p&gt;Forest elephants do not live in trees but among them. Let&apos;s look what scientists are saying in &quot;&lt;cite&gt;The Forest Elephant in Borneo&lt;/cite&gt;&quot;:&lt;/p&gt; &lt;blockquote&gt; &lt;h1&gt;Borneo&lt;/h1&gt; &lt;p&gt;The forest element lives in Borneo...&lt;/p&gt; &lt;/blockquote&gt; &lt;/section&gt;&lt;/section&gt; 大纲形式为：1231. Forest elephants 1.1 Introduction 1.2 Habitat 大纲不包含&lt;blockqupte&gt;元素的内部大纲，&lt;blockqupte&gt;作为外部引用成为分区根并将其内部大纲分离出去。 大纲之外的章节（Sections outside the outline）HTML5定义了两个允许定义章节但不属于文档主大纲的新元素： &lt;aside&gt; : 定义的章节，其虽然于主体有关联，但却不是主体的一部分。比如一个广告块或者一个解释框。&lt;aside&gt; 有其自己的大纲，但却不属于文档的主大纲。 &lt;nav&gt;：导航链接的集合。这些链接不会成为文档流或大纲的一部分。 页眉和页脚（Headers and Footers） &lt;header&gt;：通常包含站点的logo和名字，或水平导航菜单。如果是在章节中的页眉，可能包含章节标题，作者名字等。 &lt;footer&gt;：通常包含版权信息，合法标识或一些链接。章节页脚可能包含章节的发布时间、许可信息等。 &lt;article&gt;，&lt;section&gt;，&lt;aside&gt;，&lt;nav&gt;都可以有其自己的&lt;header&gt;和&lt;footer&gt;，且不一定非要出现在网页或章节的顶部或底部。 不创建新的大纲，只是起到标识章节内容的作用。 分区元素中的联系信息（Addresses in sectioning elements）由于一个文档可能由多个作者的不同章节所组成，因此&lt;address&gt;元素为离它最近的&lt;body&gt;或&lt;article&gt; 元素提供联系信息。 在不支持HTLM5浏览器中使用HTML5元素(Using HTML5 elements in non-HTML5 browsers) 分区和标题元素应该在不支持HTML5的浏览器中也能正常工作。解决方法是使用CSS样式设置，因为CSS默认为未知元素的display属性设置为inline： 123section, article, aside, footer, header, nav, hgroup &#123; display:block;&#125; 在IE9及以前版本的IE浏览器中，不允许样式化不支持的元素。解决方法为： 1234567891011121314151617&lt;!--[if lt IE 9]&gt; &lt;script&gt; document.createElement(&quot;header&quot; ); document.createElement(&quot;footer&quot; ); document.createElement(&quot;section&quot;); document.createElement(&quot;aside&quot; ); document.createElement(&quot;nav&quot; ); document.createElement(&quot;article&quot;); document.createElement(&quot;hgroup&quot; ); document.createElement(&quot;time&quot; ); &lt;/script&gt; &lt;noscript&gt; &lt;strong&gt;Warning !&lt;/strong&gt; Because your browser does not support HTML5, some elements are created using JavaScript. Unfortunately your browser has disabled scripting. Please enable it in order to display this page. &lt;/noscript&gt;&lt;![endif]--&gt; 在IE9及以前版本的浏览器中，脚本应该保证正确的展示HTML分区元素和标题元素。如果禁用脚本，则做出适当的回馈。 在线HTML5大纲网站 HTML5 outliner","tags":[{"name":"HTML/HTML5","slug":"HTML-HTML5","permalink":"http://yoursite.com/tags/HTML-HTML5/"}]},{"title":"开始写博客","date":"2017-02-27T13:21:05.000Z","path":"2017/02/27/开始写博客/","text":"终于用hexo+github搭了博客，自己本来就是爱记录的人，希望能留下自己的思考。博客名“一只游行的火烈鸟”是致敬地球脉动第二季伟大的纪录片拍摄人员，有了他们，才有了我们了解大自然的机会。","tags":[{"name":"闲话","slug":"闲话","permalink":"http://yoursite.com/tags/闲话/"}]}]